services:
  db:
    image: postgres:latest
    container_name: db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_LOCAL_PORT}:${POSTGRES_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
    - .env
    networks:
      - nginx_network

  web:
    build:
      context: .
    container_name: web
    command: bash -c "poetry run python manage.py collectstatic --no-input && poetry run python manage.py migrate && poetry run gunicorn -w 2 config.wsgi:application --bind 0.0.0.0:${DJANGO_PORT}"
    volumes:
      - .:/usr/src/app
    ports:
      - "${DJANGO_PORT}:${DJANGO_PORT}"
    depends_on:
      - db
    env_file:
      - .env
    networks:
      - nginx_network

  redis:
    image: redis:7-alpine
    container_name: redis
    command: --port ${REDIS_PORT} --maxmemory 64M
    restart: unless-stopped
    expose:
      - "${REDIS_PORT}"

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "${NGINX_PORT}:${NGINX_PORT}"
    volumes:
      - ./nginx/site.conf:/etc/nginx/conf.d/default.conf
      - ./static:/etc/nginx/html/static/
      - ./media:/etc/nginx/html/media/
    depends_on:
      - web
    networks:
      - nginx_network

volumes:
  postgres_data:

networks:
  nginx_network:
    driver: bridge
